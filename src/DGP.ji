using Distributions, Statistics, DelimitedFiles

function discret_var(n, d = 1)
    a = rand(n)
    z1 = (a .> 0.5)
    
    b = rand(n)
    z2 = b .> 0.75
    z2 += b .> 0.25
    # z2 = z2 
    z2 = [z1 z2]

    c = rand(n)
    z3 = c .> 0.9
    z3 = [z2 z3]
    
    if d == 1
        z = z1
    elseif d == 2
        z = z2
    else
        z = z3
    end
    
    # for k in 1:n
    #     if sum(z[k, :]) > 1
    #         z[k, :] = z[k, :]./norm(z[k, :])
    #     end
    # end
    z
end

f1(v) = v^2 
df1(v) = 2v

f2(v) = log( 1 + exp(v))
df2(v) = exp(v) / ( 1 + exp(v))

function dgp(nSample, θ, β, fy = 1, d = 0, z = true, eps = 0.2)
    if d == 0
        ϵ = randn(nSample)
    elseif d == 1
        ϵt = readdlm("studentized.txt", ',', Float64)
        ϵ = rand(ϵt, nSample)
    else
        d2 = Cauchy(0,1)
        ϵ = rand(d2, nSample)
    end
    
    d = length(θ)
    q = length(β)
    # X = (rand(nSample, d) .- 0.5) * 2
    X = randn(nSample, d - 1)
    minx = minimum(X, dims = 1)
    maxx = maximum(X, dims = 1)
    # X = X - repeat(minx, nSample, 1) 
    # X = X ./ (maxx - minx) * 10 .- 5
    if z
        Z = discret_var(nSample, q - 1) .* 0.5
    else
        Z = zeros(nSample, q - 1)
    end
    
    c0, c1 = θ[1], β[1]
    eps = eps .* 1 # (log.(X*α[2:end] .+ 20 ))
    y1 = Z*β[2:end] + (X*θ[2:end] .+ c0).^2 .+ c1 .+ eps.*ϵ
    y2 = Z*β[2:end] + log.(1 .+ exp.(X*θ[2:end] .+ c0)) .+ c1 .+ eps.*ϵ
    if fy == 1
        y = y1
    else 
        y = y2
    end
    # y = y .- mean(y)
    X, Z, y
end
